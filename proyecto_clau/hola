 <!-- <nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Navbar</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavDropdown" aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNavDropdown">
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link active" aria-current="page" href="#">Home</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#">Features</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#">Pricing</a>
          </li>
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" role="button" data-bs-toggle="dropdown" aria-expanded="false">
              Dropdown link
            </a>
            <ul class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
              <li><a class="dropdown-item" href="#">Action</a></li>
              <li><a class="dropdown-item" href="#">Another action</a></li>
              <li><a class="dropdown-item" href="#">Something else here</a></li>
            </ul>
          </li>
        </ul>
      </div>
    </div>
 </nav> -->
 
necesito que me arregles esta funcion haciendo que sean seguras poniendo ? en donde van los parametros 

<?php
// Función para obtener y mostrar las categorías
public static function mostrarCategorias() {
    include "conexion.php"; // Incluye el archivo de conexión a la base de datos

    $sql = "SELECT * FROM tb_categoria"; // Consulta para seleccionar todas las categorías
    $resultado = $conexion->query($sql);

    // Verifica si hay resultados
    if ($resultado->num_rows > 0) {
        // Muestra las categorías utilizando un ciclo while
        while ($fila = $resultado->fetch_assoc()) {
            echo "<div class='categoria-item'>";
            echo "<div class='categoria-titulo'>" . $fila['titulo'] . "</div>";
            echo "<div class='categoria-descripcion'>" . $fila['descripcion'] . "</div>";
            echo "<div class='categoria-fecha'>" . $fila['fecha'] . "</div>";
            echo "</div>";
        }
    } else {
        echo "No se encontraron categorías.";
    }

    $conexion->close(); // Cierra la conexión a la base de datos
}

// Llama a la función para mostrar las categorías
mostrarCategorias();
?>

<?php
// Función para obtener y mostrar las categorías con ID en la esquina
public static function mostrarCate() {
    include "conexion.php"; // Incluye el archivo de conexión a la base de datos

    $sql = "SELECT * FROM tb_categoria"; // Consulta para seleccionar todas las categorías
    $resultado = $conexion->query($sql);

    // Verifica si hay resultados
    if ($resultado->num_rows > 0) {
        // Muestra las categorías utilizando un ciclo while
        while ($fila = $resultado->fetch_assoc()) {
            echo "<div class='categoria-item'>";
            echo "<div class='categoria-id'>" . $fila['id_categoria'] . "</div>";
            echo "<div class='categoria-titulo'>" . $fila['categoria'] . "</div>";
            echo "</div>";
        }
    } else {
        echo "No se encontraron categorías.";
    }

    $conexion->close(); // Cierra la conexión a la base de datos
}
?>
<?php
// Función para obtener y mostrar las categorías con botón de editar
public static function mostrarCate() {
    include "conexion.php"; // Incluye el archivo de conexión a la base de datos

    $sql = "SELECT * FROM tb_categoria"; // Consulta para seleccionar todas las categorías
    $resultado = $conexion->query($sql);

    // Verifica si hay resultados
    if ($resultado->num_rows > 0) {
        // Muestra las categorías utilizando un ciclo while
        while ($fila = $resultado->fetch_assoc()) {
            echo "<div class='categoria-item'>";
            echo "<div class='categoria-id'>" . $fila['id_categoria'] . "</div>";
            echo "<div class='categoria-titulo'>" . $fila['categoria'] . "</div>";
            echo "<button class='editar-btn'>Editar</button>"; // Botón de editar
            echo "</div>";
        }
    } else {
        echo "No se encontraron categorías.";
    }

    $conexion->close(); // Cierra la conexión a la base de datos
}
?>
<?php
// Función para obtener y mostrar las categorías con botón de editar en cada esquina
public static function mostrarCate() {
    include "conexion.php"; // Incluye el archivo de conexión a la base de datos

    $sql = "SELECT * FROM tb_categoria"; // Consulta para seleccionar todas las categorías
    $resultado = $conexion->query($sql);

    // Verifica si hay resultados
    if ($resultado->num_rows > 0) {
        // Muestra las categorías utilizando un ciclo while
        while ($fila = $resultado->fetch_assoc()) {
            echo "<div class='categoria-item' style='position: relative;'>"; // Establece posición relativa en el contenedor
            echo "<div class='categoria-id'>" . $fila['id_categoria'] . "</div>";
            echo "<div class='categoria-titulo'>" . $fila['categoria'] . "</div>";
            echo "<button class='editar-btn top-left'>Editar</button>"; // Botón de editar en la esquina superior izquierda
            echo "<button class='editar-btn top-right'>Editar</button>"; // Botón de editar en la esquina superior derecha
            echo "<button class='editar-btn bottom-left'>Editar</button>"; // Botón de editar en la esquina inferior izquierda
            echo "<button class='editar-btn bottom-right'>Editar</button>"; // Botón de editar en la esquina inferior derecha
            echo "</div>";
        }
    } else {
        echo "No se encontraron categorías.";
    }

    $conexion->close(); // Cierra la conexión a la base de datos
}
?>


/* Estilos CSS para botones en esquina con texto centrado */
.categoria-item {
    position: relative;
    background-color: #f2f2f2; /* Fondo gris para el contenedor de categoría */
    padding: 10px;
    border-radius: 5px;
    margin-bottom: 10px;
}

.categoria-id {
    font-weight: bold;
    margin-bottom: 5px;
}

.categoria-titulo {
    text-align: center; /* Centra el texto en la categoría */
    margin-bottom: 10px;
}

.editar-btn {
    position: absolute;
    top: 5px;
    left: 5px;
    padding: 8px 16px;
    font-size: 14px;
    text-align: center;
    text-decoration: none;
    cursor: pointer;
    outline: none;
    color: #fff;
    background-color: #4CAF50; /* Color de fondo del botón */
    border: none;
    border-radius: 3px;
}

.editar-btn:hover {
    background-color: #45a049;
}

.editar-btn:active {
    background-color: #3e8e41;
}




/* Estilos CSS para centrar solo el texto "Ropa para Daa" */
.categoria-titulo {
    text-align: center; /* Centra el texto en la categoría */
}

.categoria-titulo:nth-of-type(2) {
    text-align: left; /* Ajusta el texto a la izquierda para el resto de los elementos */
}
  este si es 
/* Estilos CSS para centrar verticalmente el texto y evitar que quede pegado al borde inferior */
.categoria-item {
    position: relative;
    background-color: #f2f2f2; /* Fondo gris para el contenedor de categoría */
    padding: 10px;
    border-radius: 5px;
    margin-bottom: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100px; /* Ajusta la altura del contenedor según tus necesidades */
    position: relative;
}

.categoria-titulo {
    text-align: center; /* Centra el texto en la categoría */
    margin: auto; /* Centra verticalmente el texto */
}

<?php
session_start();

if(isset($_GET['error'])){
    if($_GET['error'] == "error-1"){
        if(!isset($_SESSION['stop'])) $_SESSION['stop'] = 0;
        $_SESSION['stop'] += 1;
        
        if($_SESSION['stop'] >= 3){
            echo 'No pasas. Contraseña o usuario incorrecto.';
            exit; // Detiene la ejecución del script
        }
    }
}

function verificar($doc, $co) {
    require("conexion.php");
    $salida = "";
    $sql = "SELECT count(*) from tb_usuarios ";
    $sql .= "where documento='$doc' and contraseña='$co'";
    $resultado = $conexion->query($sql);
    
    while($fila = $resultado->fetch_array()){
        $salida = $fila[0];
    }
    
    $conexion->close();
    return $salida; 
}


$doc = $_POST['documento']; 
$co = $_POST['contraseña']; 

$resultado_verificacion = verificar($doc, $co);

if($resultado_verificacion == 1){
   
} else {
  a
    header("Location: tu_pagina.php?error=error-1");
    exit;
}


// est es lo mio

<?php

class Usuario {
    
    public static function verificar($doc, $co) {
        require("conexion.php"); // Suponiendo que aquí se realiza la conexión a la base de datos
        
        $sql = "SELECT count(*) FROM tb_usuarios ";
        $sql .= "WHERE documento='$doc' AND contraseña='$co'";
        
        $resultado = $conexion->query($sql);
        
        $salida = 0;
        
        if ($resultado) {
            $fila = $resultado->fetch_array();
            $salida = $fila[0];
        }
        
        $conexion->close();
        
        return $salida; 
    }
    
    public static function login($username, $password) {
        if (!isset($_SESSION)) {
            session_start();
        }
        
        // Aquí deberías realizar la verificación de credenciales en base de datos
        $resultado = self::verificar($username, $password);
        
        if ($resultado > 0) {
            // Credenciales válidas, iniciar sesión
            $_SESSION['username'] = $username;
            $_SESSION['stop'] = 0; // Reinicia el contador de errores
            return true;
        } else {
            // Credenciales inválidas, incrementar contador de errores
            if (!isset($_SESSION['stop'])) {
                $_SESSION['stop'] = 0;
            }
            $_SESSION['stop'] += 1;
            
            return false;
        }
    }
    
}

?>
<?php
// Ejemplo de cómo usar la clase Usuario para iniciar sesión

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];

    if (Usuario::login($username, $password)) {
        // Inicio de sesión exitoso, redirecciona a la página principal
        header("Location: index.php");
        exit();
    } else {
        // Error en las credenciales, redirecciona de vuelta al formulario de inicio de sesión con el error
        header("Location: login.php?error=error-1");
        exit();
    }
}
?>

<?php

// session_start();

// if(isset($_GET['error'])){
//     if($_GET['error'] == "error-1"){
//         if(!isset($_SESSION['stop'])) $_SESSION['stop'] = 0;
//         $_SESSION['stop'] += 1;
        
//         if($_SESSION['stop'] >= 3){
//             echo 'No pasas. Contraseña o usuario incorrecto.';
//             exit; // Detiene la ejecución del script
//         }
//     }
// }


// session_start();

// // Función para iniciar sesión y verificar credenciales
// function loginUser($username, $password) {
//     // Realiza tu consulta SQL para verificar las credenciales
//     // Aquí deberías tener tu lógica para consultar la base de datos u otro sistema de almacenamiento
//     $db_username = "usuario"; // Reemplaza con el nombre de usuario real de la base de datos
//     $db_password = "contraseña"; // Reemplaza con la contraseña real almacenada en la base de datos

//     if ($username == $db_username && $password == $db_password) {
//         // Credenciales válidas, iniciar sesión
//         $_SESSION['username'] = $username;
//         $_SESSION['stop'] = 0; // Inicializa el contador de errores
        
//         return true; // Indica inicio de sesión exitoso
//     } else {
//         // Credenciales inválidas, incrementar contador de errores
//         if (!isset($_SESSION['stop'])) {
//             $_SESSION['stop'] = 0;
//         }
//         $_SESSION['stop'] += 1;

//         return false; // Indica inicio de sesión fallido
//     }
// }

// Lógica para procesar el formulario de inicio de sesión
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Verifica si se han enviado los datos del formulario
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Llama a la función para iniciar sesión y verificar credenciales
    if (loginUser($username, $password)) {
        // Inicio de sesión exitoso, redirecciona a la página principal
        header("Location: seccion3.php"); // Cambia index.php por la página a la que quieres redireccionar
        exit();
    } else {
        // Error en las credenciales, redirecciona de vuelta al formulario de inicio de sesión con el error
        header("Location: seccion1.php?error=error-1"); // Puedes ajustar los parámetros de error según tu lógica
        exit();
    }


    <?php
    $doc = $_GET['documento'];
    $co = $_GET['contraseña'];
    
    
    include("clase.php");
    login::verificar($doc,$co);
    
    include_once("clase.php");
    if(!isset($_SESSION)) session_start();
    if(!isset($_SESSION['documento'])) $_SESSION['documento'] = '';
    if(isset($_GET['documento']) && isset($_GET['contraseña'])) {
        $doc = $_GET['documento'];
        $co= $_GET['contraseña'];
        if(login::verificar($doc, $co) >= 1) {
            $_SESSION['documento'] =$doc;
            header("location:controlador.php?seccion=seccion3");
            exit; 
        } else {
            header("location:out.html");
            exit; 
        }
    } else {
        echo "Error: Debes proporcionar usuario y contraseña.";
        exit; 
    }
    
    include( "plantilla.php" );
    
    $doc = $_POST['documento']; // Ajusta esto según tus campos de formulario
    $co = $_POST['contraseña']; // Ajusta esto según tus campos de formulario
    
    $resultado_verificacion = verificar($doc, $co);
    
    if($resultado_verificacion == 1){
        // Inicio de sesión exitoso
    } else {
        // Redirige a la misma página con el parámetro de error si la verificación falla
        header("Location: tu_pagina.php?error=error-1");
        exit;
    }
    
    
    session_start(); // Inicia la sesión al inicio del archivo
    
    if(isset($_GET['documento']) && isset($_GET['contraseña'])) {
        $doc = $_GET['documento'];
        $co = $_GET['contraseña'];
    
        include("clase.php"); // Incluye tu archivo donde está la clase login
    
        $resultado_verificacion = login::verificar($doc, $co);
    
        if($resultado_verificacion >= 1) {
            $_SESSION['documento'] = $doc;
            header("location: controlador.php?seccion=seccion3");
            exit; 
        } else {
            // Manejo de intentos fallidos
            if(!isset($_SESSION['stop'])) {
                $_SESSION['stop'] = 0;
            }
    
            $_SESSION['stop'] += 1;
    
            if($_SESSION['stop'] >= 3) {
                echo 'No pasas, has excedido el límite de intentos fallidos.';
                exit; // Puedes redirigir o mostrar un mensaje adecuado
            } else {
                // Redirige de vuelta al formulario con el error
                header("location: formulario.php?error=error-1");
                exit;
            }
        }
    } else {
        echo "Error: Debes proporcionar usuario y contraseña.";
        exit; 
    }
    ?>
    <?php
session_start(); // Inicia la sesión al inicio del archivo

if(isset($_GET['documento']) && isset($_GET['contraseña'])) {
    $doc = $_GET['documento'];
    $co = $_GET['contraseña'];

    include("clase.php"); // Incluye tu archivo donde está la clase login

    // Verificamos si la cuenta está bloqueada temporalmente
    if(isset($_SESSION['bloqueado_hasta']) && $_SESSION['bloqueado_hasta'] > time()) {
        $tiempo_restante = $_SESSION['bloqueado_hasta'] - time();
        echo "Tu cuenta está bloqueada temporalmente. Intenta nuevamente en $tiempo_restante segundos.";
        exit;
    }

    // Verificamos si ya se han excedido los intentos permitidos
    if(isset($_SESSION['stop']) && $_SESSION['stop'] >= 3) {
        if(!isset($_SESSION['bloqueado_hasta'])) {
            // Establecemos el tiempo de bloqueo de 5 minutos (300 segundos)
            $_SESSION['bloqueado_hasta'] = time() + 300; // 300 segundos = 5 minutos
        }
        echo "Tu cuenta ha sido bloqueada temporalmente por exceder el límite de intentos fallidos. Intenta nuevamente más tarde.";
        exit;
    }

    // Si la cuenta no está bloqueada, procedemos con la verificación de las credenciales
    $resultado_verificacion = login::verificar($doc, $co);

    if($resultado_verificacion >= 1) {
        // Si las credenciales son correctas, reiniciamos el contador de intentos fallidos
        $_SESSION['stop'] = 0;
        unset($_SESSION['bloqueado_hasta']); // Reiniciamos el bloqueo temporal si existe

        $_SESSION['documento'] = $doc;
        header("location: controlador.php?seccion=seccion3");
        exit; 
    } else {
        // Incrementamos el contador de intentos fallidos
        if(!isset($_SESSION['stop'])) {
            $_SESSION['stop'] = 0;
        }
        $_SESSION['stop'] += 1;

        // Redirigimos de vuelta al formulario con el error
        header("location: formulario.php?error=error-1");
        exit;
    }
} else {
    echo "Error: Debes proporcionar usuario y contraseña.";
    exit; 
}
?>
<?php
session_start(); // Inicia la sesión al inicio del archivo

if(isset($_GET['documento']) && isset($_GET['contraseña'])) {
    $doc = $_GET['documento'];
    $co = $_GET['contraseña'];

    include("clase.php"); // Incluye tu archivo donde está la clase login

    $resultado_verificacion = login::verificar($doc, $co);

    if($resultado_verificacion >= 1) {
        $_SESSION['documento'] = $doc;
        header("location: controlador.php?seccion=seccion3");
        exit; 
    } else {
        // Manejo de intentos fallidos
        if(!isset($_SESSION['stop'])) {
            $_SESSION['stop'] = 0;
        }

        $_SESSION['stop'] += 1;

        if($_SESSION['stop'] >= 3) {
            echo 'No pasas, has excedido el límite de intentos fallidos.';
            exit; // Puedes redirigir o mostrar un mensaje adecuado
        } else {
            // Redirige de vuelta al formulario con el error
            header("location: formulario.php?error=error-1");
            exit;
        }
    }
} else {
    echo "Error: Debes proporcionar usuario y contraseña.";
    exit; 
}
?>







necesito que me arregles este codigo
<?php
session_start(); 

if(isset($_GET['documento']) && isset($_GET['contraseña'])) {
    $doc = $_GET['documento'];
    $co = $_GET['contraseña'];

    include("clase.php"); 

    
    if(isset($_SESSION['bloqueado_hasta']) && $_SESSION['bloqueado_hasta'] > time()) {
        $tiempo_restante = $_SESSION['bloqueado_hasta'] - time();
        echo "Tu cuenta está bloqueada temporalmente. Intenta nuevamente en $tiempo_restante segundos.";
        exit;
    }

    
    if(isset($_SESSION['error']) && $_SESSION['stop'] >= 3) {
        if(!isset($_SESSION['bloqueado_hasta'])) {
            
            $_SESSION['bloqueado_hasta'] = time() + 300; 
        }
        echo "Tu cuenta ha sido bloqueada temporalmente por exceder el límite de intentos fallidos. Intenta nuevamente más tarde.";
        exit;
    }

   
    $resultado_verificacion = login::verificar($doc, $co);

    if($resultado_verificacion >= 3) {
      
        $_SESSION['stop'] = 0;
        unset($_SESSION['bloqueado_hasta']); 

        $_SESSION['documento'] = $doc;
        header("location: controlador.php?seccion=seccion3");
        exit; 
    } else {
        
        if(!isset($_SESSION['stop'])) {
            $_SESSION['stop'] = 0;
        }
        $_SESSION['stop'] += 1;

       
        header("location: seccion1.php?error=error-1");
        exit;
    }
} else {
    echo "Error: Debes proporcionar usuario y contraseña.";
    exit; 
}
?>


quiero que arregles la parte en la que si el usuario ingrese los datos incorrectos mas de 3 veces se le bloquee la cuenta durante 5 minutos 
pero mi codigo nisiquera cuenta las 3 veces de error y de una vez le dice que esta bloqueado entonces quiero que cuando se cumplan las 3 veces 
de eror ahí si lo bloquee y que identifique que usuarios es ya que cuando ingreso un usuario distinto de una vez tambien le dice que esta bloqueado 
y dame lo que debo poner en el formulario tambien 